<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>弈</title>
  
  
  <link href="https://blog.dlzhang.com/atom.xml" rel="self"/>
  
  <link href="https://blog.dlzhang.com/"/>
  <updated>2021-04-14T07:51:25.454Z</updated>
  <id>https://blog.dlzhang.com/</id>
  
  <author>
    <name>曹恒源</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试新建</title>
    <link href="https://blog.dlzhang.com/posts/5/"/>
    <id>https://blog.dlzhang.com/posts/5/</id>
    <published>2021-04-14T07:49:57.000Z</published>
    <updated>2021-04-14T07:51:25.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="aldsfkl"><a href="#aldsfkl" class="headerlink" title="aldsfkl"></a>aldsfkl</h1><p>aldksfj</p><p>;lakjdf</p><span id="more"></span>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;aldsfkl&quot;&gt;&lt;a href=&quot;#aldsfkl&quot; class=&quot;headerlink&quot; title=&quot;aldsfkl&quot;&gt;&lt;/a&gt;aldsfkl&lt;/h1&gt;&lt;p&gt;aldksfj&lt;/p&gt;
&lt;p&gt;;lakjdf&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux中bash读取文件的方式</title>
    <link href="https://blog.dlzhang.com/posts/1/"/>
    <id>https://blog.dlzhang.com/posts/1/</id>
    <published>2021-02-26T22:34:36.000Z</published>
    <updated>2021-04-14T08:44:43.853Z</updated>
    
    <content type="html"><![CDATA[<h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> `cat filename`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> $(cat filename)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line"><span class="keyword">done</span> &lt; filename</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;方法1&quot;&gt;&lt;a href=&quot;#方法1&quot; class=&quot;headerlink&quot; title=&quot;方法1&quot;&gt;&lt;/a&gt;方法1&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; `cat filename`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="bash" scheme="https://blog.dlzhang.com/overview/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>主机设置安全启动</title>
    <link href="https://blog.dlzhang.com/posts/3/"/>
    <id>https://blog.dlzhang.com/posts/3/</id>
    <published>2019-09-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:46:26.876Z</updated>
    
    <content type="html"><![CDATA[<p>主机设置安装启动</p><span id="more"></span><p><img data-src="/images/3-%E8%AE%BE%E7%BD%AE%E5%AE%89%E5%85%A8%E5%90%AF%E5%8A%A8.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;主机设置安装启动&lt;/p&gt;</summary>
    
    
    
    <category term="操作系统安装" scheme="https://blog.dlzhang.com/overview/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    
    
    <category term="安装启动" scheme="https://blog.dlzhang.com/overview/tags/%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>shell中的多线程</title>
    <link href="https://blog.dlzhang.com/posts/11/"/>
    <id>https://blog.dlzhang.com/posts/11/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:41:46.081Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Shell-中的多进程"><a href="#Shell-中的多进程" class="headerlink" title="Shell 中的多进程"></a>Shell 中的多进程</h1><p>利用管道实现</p><ul><li>有名管道</li><li>匿名管道<!--more--><a href="https://blog.51cto.com/fuwenchao/1564573">https://blog.51cto.com/fuwenchao/1564573</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;Shell-中的多进程&quot;&gt;&lt;a href=&quot;#Shell-中的多进程&quot; class=&quot;headerlink&quot; title=&quot;Shell 中的多进程&quot;&gt;&lt;/a&gt;Shell 中的多进程&lt;/h1&gt;&lt;p&gt;利用管道实现&lt;/p</summary>
      
    
    
    
    <category term="shell" scheme="https://blog.dlzhang.com/overview/shell/"/>
    
    
    <category term="shell" scheme="https://blog.dlzhang.com/overview/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Linux 工具之crontab</title>
    <link href="https://blog.dlzhang.com/posts/12/"/>
    <id>https://blog.dlzhang.com/posts/12/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:46:48.223Z</updated>
    
    <content type="html"><![CDATA[<p>crontab</p><span id="more"></span><ul><li><p>格式</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">* * * * *  /root/jiaoben.sh</span><br><span class="line">| | | | |  |</span><br><span class="line">| | | | |   ---- 要执行的命令、脚本</span><br><span class="line">| | | |  ------- 0~7  星期，0和7都是星期天</span><br><span class="line">| | |  --------- 1~12 月</span><br><span class="line">| |  ----------- 1~31 日</span><br><span class="line">|  ------------- 0~23 小时</span><br><span class="line"> --------------- 0~59 分钟</span><br></pre></td></tr></table></figure></li><li><p>示例</p><ul><li><p>每分钟执行一次</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>每小时的第3和第15分钟执行</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 * * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>在上午8点到11点的第3和第15分钟执行</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>每隔2天上午8点到11点的第3和第15分钟执行</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 */2 * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>每周一上午8点到11点的第3和第15分钟执行</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,15 8-11 * * 1 <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>每晚的21:30执行</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 21 * * * <span class="built_in">command</span></span><br></pre></td></tr></table></figure></li><li><p>每月1、10、22日的4:45</p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;crontab&lt;/p&gt;</summary>
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>bash 骚操作</title>
    <link href="https://blog.dlzhang.com/posts/11/"/>
    <id>https://blog.dlzhang.com/posts/11/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:42:19.372Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;n</span></span><br><span class="line"><span class="string">p</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">w</span></span><br><span class="line"><span class="string">&quot;</span> | fdisk /dev/vdb &amp;&amp; mkfs.ext3 /dev/vdb1</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/dev/vdb1 /data ext3 defaults 0 0&quot;</span> &gt;&gt; /etc/fstab</span><br><span class="line">mkdir /data</span><br><span class="line">mount /dev/vdb1 /data</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    <category term="bash" scheme="https://blog.dlzhang.com/overview/bash/"/>
    
    
    <category term="bash" scheme="https://blog.dlzhang.com/overview/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Centos 7 中的Yum</title>
    <link href="https://blog.dlzhang.com/posts/15/"/>
    <id>https://blog.dlzhang.com/posts/15/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:44:28.246Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h2 id="只下载不安装"><a href="#只下载不安装" class="headerlink" title="只下载不安装"></a>只下载不安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum install --downloadonly --downloaddir=/usr/package docker</span></span><br></pre></td></tr></table></figure><h3 id="强制安装rpm包"><a href="#强制安装rpm包" class="headerlink" title="强制安装rpm包"></a>强制安装rpm包</h3><p>安装，这边有个坑，可能跟你先后顺序有关系。因此我们采用一种强制安装方法进行安装！</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh <span class="params">--force</span> *<span class="string">.rpm</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h2 id=&quot;只下载不安装&quot;&gt;&lt;a href=&quot;#只下载不安装&quot; class=&quot;headerlink&quot; title=&quot;只下载不安装&quot;&gt;&lt;/a&gt;只下载不安装&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 基础</title>
    <link href="https://blog.dlzhang.com/posts/13/"/>
    <id>https://blog.dlzhang.com/posts/13/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:43:28.788Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><h1 id="Linux-主流发行版"><a href="#Linux-主流发行版" class="headerlink" title="Linux 主流发行版"></a>Linux 主流发行版</h1><ul><li>Redhat</li><li>centos</li><li>Ubuntu</li><li>debian</li><li>archlinux</li></ul><h1 id="Linux-启动流程"><a href="#Linux-启动流程" class="headerlink" title="Linux 启动流程"></a>Linux 启动流程</h1><ol><li>开机BIOS自检，加载硬盘。</li><li>读取MBR，MBR引导。</li><li>grub引导菜单(Boot Loader)。</li><li>加载内核kernel。</li><li>启动init进程，依据<code>inittab</code>文件设定运行级别。</li><li><code>init</code>进程，执行<code>rc.sysinit</code>文件。</li><li>启动内核模块，执行不同级别的脚本程序。</li><li>执行<code>/etc/rc.d/rc.local</code>。</li><li>启动tty，进入系统登陆界面。</li></ol><h1 id="Linux-运行级别"><a href="#Linux-运行级别" class="headerlink" title="Linux 运行级别"></a>Linux 运行级别</h1><ol><li>关机模式</li><li>单用户模式&lt;==破解root密码</li><li>无网络支持的多用户模式</li><li>有网络支持的多用户模式（文本模式，工作中最常用的模式）</li><li>保留，未使用</li><li>有网络支持的X-windows支持多用户模式（桌面）</li><li>重新引导系统，即重启</li></ol><h1 id="Linux-目录及作用"><a href="#Linux-目录及作用" class="headerlink" title="Linux 目录及作用"></a>Linux 目录及作用</h1><ul><li><code>/bin</code> bin是Binary的缩写, 这个目录存放着最经常使用的命令。</li><li><code>/boot</code> 这里存放的是启动Linux时使用的一些核心文件，包括一些连接文件以及镜像文件。</li><li><code>/dev</code> dev是Device(设备)的缩写, 该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的。</li><li><code>/etc</code> 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li><li><code>/home</code> 用户的主目录，在Linux中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li><li><code>/lib</code> 这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件。几乎所有的应用程序都需要用到这些共享库。</li><li><code>/lost+found</code> 这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</li><li><code>/media</code> linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，linux会把识别的设备挂载到这个目录下。</li><li><code>/mnt</code> 系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在<code>/mnt/</code>上，然后进入该目录就可以查看光驱里的内容了。</li><li><code>/opt</code> 这是给主机额外安装软件所摆放的目录。比如你安装一个ORACLE数据库则就可以放到这个目录下。默认是空的。</li><li><code>/proc</code> 这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。这个目录的内容不在硬盘上而是在内存里，我们也可以直接修改里面的某些文件，比如可以通过下面的命令来屏- 蔽主机的ping命令，使别人无法ping你的机器：<code>echo 1 &gt; /proc/sys/net/ipv4/icmp_echo_ignore_all</code></li><li><code>/root</code> 该目录为系统管理员，也称作超级权限者的用户主目录。</li><li><code>/sbin</code> s就是Super User的意思，这里存放的是系统管理员使用的系统管理程序。</li><li><code>/selinux</code> 这个目录是Redhat/CentOS所特有的目录，Selinux是一个安全机制，类似于windows的防火墙，但是这套机制比较复杂，这个目录就是存放selinux相关的文件的。</li><li><code>/srv</code> 该目录存放一些服务启动之后需要提取的数据。</li><li><code>/sys</code> 这是linux2.6内核的一个很大的变化。该目录下安装了2.6内核中新出现的一个文件系统 sysfs 。sysfs文件系统集成了下面3种文件系统的信息 - 针对进程信息的proc文件系统、针对设备的devfs文件系统以及针对伪终端的devpts文件系统。该文件系统是内核设备树的一个直观反映。当一个内核对象被创建的时候，对应的文件和目录也在内核对象子系统中被创建。</li><li><code>/tmp</code> 这个目录是用来存放一些临时文件的。</li><li><code>/usr</code> 这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于windows下的program files目录。</li><li><code>/usr/bin</code> 系统用户使用的应用程序。</li><li><code>/usr/sbin</code> 超级用户使用的比较高级的管理程序和系统守护程序。</li><li><code>/usr/src</code> 内核源代码默认的放置目录。</li><li><code>/var</code> 这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</li><li><code>/run</code> 是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。如果你的系统上有 <code>/var/run</code> 目录，应该让它指向 run。</li></ul><h1 id="Linux-中常见的文件系统"><a href="#Linux-中常见的文件系统" class="headerlink" title="Linux 中常见的文件系统"></a>Linux 中常见的文件系统</h1><ul><li>EXT3</li><li>EXT4</li><li>XFS</li></ul><h1 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a><a href="https://www.notion.so/Linux-1b17d4aee0be43f0b7f61c9950dcbb7f">Linux 命令</a></h1><ul><li><p>tar</p><p>  #压缩</p><p>  tar -czvf ***.tar.gz</p><p>  tar -cjvf ***.tar.bz2</p><p>  #解压缩</p><p>  tar -xzvf ***.tar.gz</p><p>  tar -xjvf ***.tar.bz2</p></li></ul><h1 id="Linux-中文件类型及表示符号"><a href="#Linux-中文件类型及表示符号" class="headerlink" title="Linux 中文件类型及表示符号"></a>Linux 中文件类型及表示符号</h1><ul><li><strong>普通文件</strong> <code>-</code></li><li><strong>目录</strong><code>d</code></li><li><strong>符号链接</strong><code>l</code></li><li>字符设备文件 <code>c</code></li><li>块设备文件<code>b</code></li><li>套接字<code>s</code></li><li>命名管道<code>p</code></li></ul><h1 id="Linux-删除文件的原理"><a href="#Linux-删除文件的原理" class="headerlink" title="Linux 删除文件的原理"></a>Linux 删除文件的原理</h1><p>Linux系统是通过<code>link</code>的数量来控制文件删除的，只有当一个文件不存在任何<code>link</code>的时候，这个文件才会被删除。一般来说每个文件两个<code>link</code>计数器来控制：<code>i_count</code>和<code>i_nlink</code>。当一个文件被一个程序占用的时候<code>i_count</code>就加1。当文件的硬链接多一个的时候<code>i_nlink</code>也加1。删除一个文件，就是让这个文件，没有进程占用，同时<code>i_link</code>数量为0。</p><h1 id="Linux-系统中的buffer和cache区别"><a href="#Linux-系统中的buffer和cache区别" class="headerlink" title="Linux 系统中的buffer和cache区别"></a><strong>Linux 系统中的<code>buffer</code>和<code>cache</code>区别</strong></h1><p>buffer和cache都是内存中的一块区域，当CPU需要写数据到磁盘时，由于磁盘速度比较慢，所以CPU先把数据存进buffer，然后CPU去执行其他任务，buffer中的数据会定期写入磁盘；当CPU需要从磁盘读入数据时，由于磁盘速度比较慢，可以把即将用到的数据提前存入cache，CPU直接从Cache中读取数据。</p><h1 id="Linux-中的inode和block"><a href="#Linux-中的inode和block" class="headerlink" title="Linux 中的inode和block"></a>Linux 中的<code>inode</code>和<code>block</code></h1><p><code>inode</code>节点是一个64字节长的表，表中包含了文件的相关信息，如：字节数、属主<code>UserID</code>、属组<code>GroupID</code>、读写执行权限、时间戳等。在<code>inode</code>节点表中最重要的内容是：磁盘地址表。</p><p>文件名存放在目录当中，但Linux系统内部不使用文件名，而是使用<code>inode</code>号码识别文件。对于系统来说文件名只是<code>inode</code>号码便于识别的别称。即Linux文件系统通过把<code>inode</code>和文件名进行关联来查找文件。当需要读取该文件时，文件系统在当前目录表中查找该文件名对应的项，由此得到该文件相对应的<code>inode</code>节点号，通过该<code>inode</code>节点的磁盘地址表把分散存放的文件物理块连接成文件的逻辑结构。</p><p>文件是存储在硬盘上的，硬盘的最小存储单位叫做扇区<code>sector</code>，每个扇区存储512字节。操作系统读取硬盘的时候，不会一个个扇区地读取，这样效率太低，而是一次性连续读取多个扇区，即一次性读取一个块<code>block</code>。这种由多个扇区组成的块，是文件存取的最小单位。块的大小，最常见的是4KB，即连续八个<code>sector</code>组成一个<code>block</code>。</p><p>即512字节组成一个扇区<code>sector</code>，多个扇区组成一个块<code>block</code>，常见的块单位4KB，即连续八个扇区组成一个<code>block</code>。</p><p>一个文件必须占用一个<code>inode</code>，但至少占用一个<code>block</code>。</p><h1 id="Linux中软链接和硬链接的区别"><a href="#Linux中软链接和硬链接的区别" class="headerlink" title="Linux中软链接和硬链接的区别"></a>Linux中软链接和硬链接的区别</h1><ul><li><p><strong>软链接</strong></p><p>  软连接类似于Windows的快捷方式功能的文件，可以快速连接到目标文件或目录。即再创建一个独立的文件，而这个文件会让数据的读取指向它连接的那个文件的文件名。例如，文件A和文件B的<code>inode</code>号码虽然不一样，但是文件A的内容是文件B的路径。读取文件A时，系统会自动将访问者导向文件B。这时，文件A就称为文件B的软链接。</p><p>  因此，文件A依赖于文件B而存在，如果删除了文件B，打开文件A就会报错。</p></li><li><p><strong>硬链接</strong></p><p>  通过文件系统的<code>inode</code>链接来产生的新的文件名，而不是产生新的文件，称为硬链接。</p><p>  一般情况下，每个<code>inode</code>号码对应一个文件名，但是Linux允许多个文件名指向同一个<code>inode</code>号码。意味着可以使用不同的文件名访问相同的内容。创建硬链接，源文件与目标文件的inode号码相同，都指向同一个<code>inode</code>。<code>inode</code>信息中的链接数这时就会增加1。</p></li><li><p>当一个文件拥有多个硬链接时，对文件内容修改，会影响到所有其他文件的内容；</p></li><li><p>删除一个文件名，不影响另一个文件名的访问，删除一个文件名，只会使得inode中的链接数减1。</p></li><li><p>区别</p><p>  软链接与硬链接最大的区别：软链接是文件A指向文件B的文件名，而不是文件B的<code>inode</code>号码，文件B的<code>inode</code>链接数不会因此发生变化。</p></li></ul><p>不能对目录做硬链接，但是通过mkdir命令创建一个新目录，通常其硬链接数应该有2个，因为常见的目录本身为1个硬链接，而目录下面的隐藏目录.（点号）是该目录的又一个硬链接，也算是1个连接数。</p><h1 id="Linux-文件系统修复fsck的过程"><a href="#Linux-文件系统修复fsck的过程" class="headerlink" title="Linux 文件系统修复fsck的过程"></a>Linux 文件系统修复<code>fsck</code>的过程</h1><p>成功修复文件系统的前提是要有两个以上的主文件系统（即两个系统），并保证在修复之前卸载将被修复的文件系统，然后使用命令fsck对受到破坏的文件系统进行修复。</p><p>fsck检查文件系统分为5步，每一步检查系统不同部分的连接特性并对上一步进行验证和修改。</p><p>检查从超级块开始、然后是分配的磁盘块、路径名、目录的连接性、链接数目以及空闲块链表、inode。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;Linux-主流发行版&quot;&gt;&lt;a href=&quot;#Linux-主流发行版&quot; class=&quot;headerlink&quot; title=&quot;Linux 主流发行版&quot;&gt;&lt;/a&gt;L</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统优化</title>
    <link href="https://blog.dlzhang.com/posts/14/"/>
    <id>https://blog.dlzhang.com/posts/14/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:43:56.589Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong>目录</strong></p><h1 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭<code>selinux</code></h1><p>编辑<code>/etc/selinux/config</code>文件</p><p>将<code>SELINUX=enforcing</code>改为<code>SELINUX=disabled</code> ，保存后退出,重启系统生效</p><h1 id="调整内核参数文件-etc-syctl-conf"><a href="#调整内核参数文件-etc-syctl-conf" class="headerlink" title="调整内核参数文件/etc/syctl.conf"></a>调整内核参数文件<code>/etc/syctl.conf</code></h1><ul><li><p><code>net.ipv4.tcp_syncookies = 1</code></p><p>  表示开启SYNCookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为0，表示关闭；</p></li><li><p><code>net.ipv4.tcp_tw_reuse = 1</code></p><p>  表示开启重用。允许将TIME-WAIT sockets重新用于新的TCP连接，默认为0，表示关闭；</p></li><li><p><code>net.ipv4.tcp_tw_recycle = 1</code></p><p>  表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭。</p></li><li><p><code>net.ipv4.tcp_fin_timeout = 30</code></p><p>  表示如果套接字由本端要求关闭，这个参数决定了它保持在FIN-WAIT-2状态的时间。</p></li><li><p><code>net.ipv4.tcp_keepalive_time = 1200</code></p><p>  表示当keepalive起用的时候，TCP发送keepalive消息的频度。缺省是2小时，改为20分钟。</p></li><li><p><code>net.ipv4.ip_local_port_range = 1024 65000</code></p><p>  表示用于向外连接的端口范围。缺省情况下很小：32768到61000，改为1024到65000。</p></li><li><p><code>net.ipv4.tcp_max_syn_backlog = 8192</code></p><p>  表示SYN队列的长度，默认为1024，加大队列长度为8192，可以容纳更多等待连接的网络连接数。</p></li><li><p><code>net.nf_conntrack_max = 655360</code></p><p>  在内核内存中netfilter可以同时处理的“任务”（连接跟踪条目）</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;关闭selinux&quot;&gt;&lt;a href=&quot;#关闭selinux&quot; class=&quot;headerlink&quot; title=&quot;关闭selinux&quot;&gt;&lt;/a&gt;关闭&lt;code</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>模板文档</title>
    <link href="https://blog.dlzhang.com/posts/439999/"/>
    <id>https://blog.dlzhang.com/posts/439999/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:44:58.504Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><p><strong><center>ladksfjlas</center></strong></p><blockquote class="blockquote-center"><p>aldksfjlajfsdl<br>adlsfkjlkadfs<br>adfslkjadfsl</p></blockquote><p><strong><center>aldskfjlsajfd</center></strong></p><blockquote class="blockquote-center"><p>lakdsfl<br>aldskfj;ladfskj<br>aldskfj;ladfks<br>aldskjf</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;&lt;center&gt;ladksfjlas&lt;/center&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote class=&quot;blockquote-center&quot;&gt;
&lt;p&gt;aldksfjlajfsdl&lt;br&gt;adl</summary>
      
    
    
    
    <category term="归档" scheme="https://blog.dlzhang.com/overview/%E5%BD%92%E6%A1%A3/"/>
    
    
    <category term="标签" scheme="https://blog.dlzhang.com/overview/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
  <entry>
    <title>在 CentOS 上挂载 exFAT 驱动器</title>
    <link href="https://blog.dlzhang.com/posts/4/"/>
    <id>https://blog.dlzhang.com/posts/4/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:44:55.133Z</updated>
    
    <content type="html"><![CDATA[<p>想要在 CentOS 上挂载 exFAT 文件系统，你需要安装免费 FUSE exFAT 模块和工具，它们给 Unix-like 的系统提供了一个完整特性的 exFAT 文件系统实现。</p><p>exFAT 软件包在 CentOS 7 核心软件源仓库上不可用。你可以选择从源码编译 exFAT 工具，或者从<a href="https://li.nux.ro/repos.html">Nux Dextop</a>源仓库上使用 yum 下载安装它。我们选择第二个选。</p><p>Nux 源依赖 EPEL 软件源。如果 EPEL 软件源在你的系统上不可用，启动它，输入：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br></pre></td></tr></table></figure><p>下一步，导入 GPG key 并且通过安装 rpm 包启用 Nux 软件源：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -v --import http:<span class="regexp">//</span>li.nux.ro<span class="regexp">/download/</span>nux/RPM-GPG-KEY-nux.ro</span><br><span class="line">sudo rpm -Uvh http:<span class="regexp">//</span>li.nux.ro<span class="regexp">/download/</span>nux<span class="regexp">/dextop/</span>el7<span class="regexp">/x86_64/</span>nux-dextop-release-<span class="number">0</span>-<span class="number">5</span>.el7.nux.noarch.rpm</span><br></pre></td></tr></table></figure><p>一旦源仓库安装完成，使用下面的命令安装<code>exfat-fuse</code>和<code>exfat-utils</code>软件包：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> exfat-utils fuse-exfat</span><br></pre></td></tr></table></figure><p>就这样了。你现在可以挂载 exFAT 格式的设备。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;想要在 CentOS 上挂载 exFAT 文件系统，你需要安装免费 FUSE exFAT 模块和工具，它们给 Unix-like 的系统提供了一个完整特性的 exFAT 文件系统实现。&lt;/p&gt;
&lt;p&gt;exFAT 软件包在 CentOS 7 核心软件源仓库上不可用。你可以选择</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL使用</title>
    <link href="https://blog.dlzhang.com/posts/5/"/>
    <id>https://blog.dlzhang.com/posts/5/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:45:03.487Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h1&gt;</summary>
      
    
    
    
    <category term="MySQL" scheme="https://blog.dlzhang.com/overview/MySQL/"/>
    
    
    <category term="MySQL" scheme="https://blog.dlzhang.com/overview/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux ftp使用，vsftpd</title>
    <link href="https://blog.dlzhang.com/posts/7/"/>
    <id>https://blog.dlzhang.com/posts/7/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:39:40.616Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="vsftpd"><a href="#vsftpd" class="headerlink" title="vsftpd"></a>vsftpd</h1><p><img data-src="vsftpd%2086f7f296b3d147ddb23b22a0c3788cee/Untitled.png" alt="vsftpd%2086f7f296b3d147ddb23b22a0c3788cee/Untitled.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#----匿名用户设置----</span></span><br><span class="line">anonymous_enable=NO <span class="comment">#禁止匿名用户登录</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----本地用户设置----</span></span><br><span class="line">local_enable=YES <span class="comment">#允许本地用户登录ftp服务器</span></span><br><span class="line">write_enable=YES <span class="comment">#允许用户想服务器执行写入操作</span></span><br><span class="line">local_umask=022 <span class="comment">#设置服务器上本地用户创建文件的权限掩码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----欢迎语设置----</span></span><br><span class="line">dirmessage_enable=YES <span class="comment">#启用目录提示消息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----日志文件设置----</span></span><br><span class="line">xferlog_enable=YES <span class="comment">#启用日志文件功能，记录于/var/log/xferlog</span></span><br><span class="line">xferlog_std_format=YES <span class="comment">#启用标准的日志格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----FTP工作方式与端口设置----</span></span><br><span class="line">connect_from_port_20=YES <span class="comment">#主动模式下，是否启用默认的20端口进行数据传输</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----与连接相关的设置----</span></span><br><span class="line">listen=NO            <span class="comment">#vsftpd不是以独立的服务运行，要受到xinetd服务的管控，功能上会受到限制</span></span><br><span class="line">listen_ipv6=YES</span><br><span class="line"></span><br><span class="line"><span class="comment">#----控制用户是否允许切换到上级目录----</span></span><br><span class="line">chroot_list_enable=YES         <span class="comment">#开启限制用户在主目录的功能</span></span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list <span class="comment">#在chroot_list文件中加入你要限制的用户名，一行一个用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----虚拟用户设置----</span></span><br><span class="line">pam_service_name=vsftpd      <span class="comment">#虚拟用户使用PAM认证方式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----控制用户访问（通过vsftpd.user_list和ftpusers文件来实现）----</span></span><br><span class="line">userlist_enable=YES <span class="comment">#是否启用userlist_file文件</span></span><br><span class="line">userlist_file=/etc/vsftpd/user_list <span class="comment">#允许user_list文件中加入的用户访问ftp服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----控制主机访问----</span></span><br><span class="line">tcp_wrappers=YES <span class="comment">#vsftpd服务器检查/etc/hosts.allow和/etc/hosts.deny中的设置，来决定请求连接的主机，是否允许访问该FTP服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----其它设置----</span></span><br><span class="line">allow_writeable_chroot=YES <span class="comment">#去除用户主目录的写权限</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>修改默认端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">打开/etc/services文件</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim /etc/services</span></span><br><span class="line">4、找到ftp选项并将21修改成你设置的端口，本文为2121</span><br><span class="line"></span><br><span class="line"><span class="comment"># 21 is registered to ftp, but also used by fsp</span></span><br><span class="line">ftp             2121/tcp</span><br><span class="line">ftp             2121/udp          fsp fspd</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;vsftpd&quot;&gt;&lt;a href=&quot;#vsftpd&quot; class=&quot;headerlink&quot; title=&quot;vsftpd&quot;&gt;&lt;/a&gt;vsftpd&lt;/h1&gt;&lt;p&gt;&lt;img data-src=&quot;vsftpd%2086f7f</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="linux" scheme="https://blog.dlzhang.com/overview/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>LVM(逻辑卷管理器)使用</title>
    <link href="https://blog.dlzhang.com/posts/6/"/>
    <id>https://blog.dlzhang.com/posts/6/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:45:00.812Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><ul><li>PV 物理卷，PE  最小物理单位</li><li>VG 卷组</li><li>LV 逻辑劵</li><li></li></ul><p>扫描   pvscan        vgscan           lvscan<br>建立   pvcreate     vgcreate        lvcreate<br>显示   pvdisplay    vgdisplay      lvdisplay<br>删除   pvremove   vgremove     lvremove<br>扩展                      vgextend      lvextend<br>缩小                      vgreduce      lvreduce</p><ul><li>创建物理卷</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/sdb  /dev/sdc</span><br></pre></td></tr></table></figure><ul><li>创建卷组</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgcreate  juanzu_name  /dev/sdb /dev/sdc </span><br></pre></td></tr></table></figure><ul><li>创建逻辑卷</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -n   lv_name    -L  150M     juanzu_name</span><br></pre></td></tr></table></figure><ul><li>格式化</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4  /dev/juanzu_name/lv_name</span><br></pre></td></tr></table></figure><h3 id="扩展逻辑卷"><a href="#扩展逻辑卷" class="headerlink" title="扩展逻辑卷"></a>扩展逻辑卷</h3><p>扩展前记得卸载设备与挂载点的关联</p><ul><li>umount</li><li>lvextend -L 290M /dev/juanzu_name/lv_name</li><li>e2fsck -f /dev/juanzu_name/lv_name</li></ul><h3 id="缩小逻辑卷"><a href="#缩小逻辑卷" class="headerlink" title="缩小逻辑卷"></a>缩小逻辑卷</h3><p>resize2fs</p><h3 id="逻辑卷快照"><a href="#逻辑卷快照" class="headerlink" title="逻辑卷快照"></a>逻辑卷快照</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;


&lt;ul&gt;
&lt;li&gt;PV 物理卷，PE  最小物理单位&lt;/li&gt;
&lt;li&gt;VG 卷组&lt;/li&gt;
&lt;li&gt;LV 逻辑劵&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;扫描   pvscan        vgscan       </summary>
      
    
    
    
    <category term="LVM" scheme="https://blog.dlzhang.com/overview/LVM/"/>
    
    
    <category term="LVM" scheme="https://blog.dlzhang.com/overview/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>使用rsync同步文件</title>
    <link href="https://blog.dlzhang.com/posts/9/"/>
    <id>https://blog.dlzhang.com/posts/9/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:41:11.536Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h1 id="Linux-工具之rsync"><a href="#Linux-工具之rsync" class="headerlink" title="Linux 工具之rsync"></a>Linux 工具之rsync</h1><p><strong>rsync命令</strong>是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。</p><ul><li><p>语法</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync [OPTION]... SRC DESTrsync [OPTION]... SRC [USER@]host:DESTrsync [OPTION]... [USER@]HOST:SRC DESTrsync [OPTION]... [USER@]HOST::SRC DESTrsync [OPTION]... SRC [USER@]HOST::DESTrsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]<span class="comment"># 常用选项[OPTION]-v :展示详细的同步信息-a :归档模式，相当于 -rlptgoD    -r :递归目录    -l :同步软连接文件    -p :保留权限    -t :将源文件的&quot;modify time&quot;同步到目标机器    -g :保持文件属组    -o :保持文件属主    -D :和--devices --specials一样，保持设备文件和特殊文件-z :发送数据前，先压缩再传输-H :保持硬链接-n :进行试运行，不作任何更改-P same as --partial --progress    --partial :支持断点续传    --progress :展示传输的进度--delete :如果源文件消失，目标文件也会被删除--delete-excluded :指定要在目的端删除的文件--delete-after :默认情况下，rsync是先清理目的端的文件再开始数据同步；如果使用此选项，则rsync会先进行数据同步，都完成后再删除那些需要清理的文件。--exclude=PATTERN :排除匹配PATTERN的文件--exclude-from=FILE :如果要排除的文件很多，可以统一写在某一文件中-e ssh :使用SSH加密隧道传输</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><ul><li><p>指定<code>ssh</code>连接时的参数,比如连接远程端口为<code>4399</code>、ip为<code>11.22.33.44</code>的格式为</p><p>  <code>rsync -az -e &#39;ssh -p 4399&#39; /home/yuan root@11.22.33.44:/home/yuan</code></p></li><li><p>指定ssh连接时的密码</p><p>  <code>sshpass -p 123456 rsync -az /home/yuan root@11.22.33.44:/home/yuan</code></p>  <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">avzP</span><br><span class="line"></span><br><span class="line">远程传输到本地</span><br><span class="line">rsync -avzP --bwlimit=<span class="number">1000</span> 远程文件 本地文件</span><br><span class="line">rsync -avzP --bwlimit=<span class="number">1000</span>  <span class="number">123.121</span><span class="number">.123</span><span class="number">.123</span>:<span class="regexp">/tmp/</span>test /apk/tmp/</span><br><span class="line"></span><br><span class="line">本地传输到远程</span><br><span class="line">rsync -avzP --bwlimit=<span class="number">1000</span> 本地文件 远程文件</span><br><span class="line">rsync -avzP --bwlimit=<span class="number">1000</span>   /apk/tmp/test <span class="number">123.121</span><span class="number">.123</span><span class="number">.123</span>:<span class="regexp">/tmp/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;Linux-工具之rsync&quot;&gt;&lt;a href=&quot;#Linux-工具之rsync&quot; class=&quot;headerlink&quot; title=&quot;Linux 工具之rsync&quot;&gt;&lt;/a&gt;Linux 工具之rsync&lt;/h1&gt;</summary>
      
    
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.dlzhang.com/overview/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>docker 使用</title>
    <link href="https://blog.dlzhang.com/posts/8/"/>
    <id>https://blog.dlzhang.com/posts/8/</id>
    <published>2011-02-27T01:34:36.000Z</published>
    <updated>2021-04-14T08:40:13.182Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><h3 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h3><p>两种方式</p><ol><li>docker commit命令</li><li>使用docker build和Dockerfile文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">示例制作一个tomcat镜像，制作步骤：</span><br><span class="line"></span><br><span class="line">docker commit 提交一个正在运行的容器为一个新的镜像</span><br><span class="line"></span><br><span class="line">1.拉取一个基础镜像</span><br><span class="line">docker pull centos</span><br><span class="line"></span><br><span class="line">2.创建一个交互式容器</span><br><span class="line">docker run -it --name=mycentos centos：latest</span><br><span class="line"></span><br><span class="line">3.上传软件到容器中</span><br><span class="line">docker cp  xxx.tar  mycentos:/root/</span><br><span class="line"></span><br><span class="line">4.在容器中安装软件</span><br><span class="line"></span><br><span class="line">1. 将交互式的容器提交为一个新的镜像</span><br><span class="line">docker commit mycentos myomcat</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="镜像打包"><a href="#镜像打包" class="headerlink" title="镜像打包"></a>镜像打包</h3><p>1.镜像打包</p><p><code>docker save -o /root/xxx.tar  &lt;name&gt;</code><br>2.导入镜像</p><p><code>docker load -i /root/xxx.tar</code></p><h3 id="容器打包"><a href="#容器打包" class="headerlink" title="容器打包"></a>容器打包</h3><p>1.容器打包</p><p><code>docker export -o /root/xx.tar  &lt;name&gt;</code><br>2.导入容器</p><p><code>docker import xx.tar &lt;name&gt;:latest</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h3 id=&quot;制作镜像&quot;&gt;&lt;a href=&quot;#制作镜像&quot; class=&quot;headerlink&quot; title=&quot;制作镜像&quot;&gt;&lt;/a&gt;制作镜像&lt;/h3&gt;&lt;p&gt;两种方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;docker commit命令&lt;/li</summary>
      
    
    
    
    <category term="docker" scheme="https://blog.dlzhang.com/overview/docker/"/>
    
    
    <category term="docker" scheme="https://blog.dlzhang.com/overview/tags/docker/"/>
    
  </entry>
  
</feed>
